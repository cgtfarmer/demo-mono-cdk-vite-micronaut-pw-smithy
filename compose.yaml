services:
  gateway:
    image: nginxproxy/nginx-proxy:1.6.0
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf

  ui:
    build:
      context: ./ui
      target: development
    environment:
      ENV: development
      VIRTUAL_HOST: localhost
      VIRTUAL_PROTO: http
      VIRTUAL_PATH: /
      VITE_API_URL: 'http://localhost/api'
    expose:
      - 5173
    tty: true
    extra_hosts: # For Linux
      - host.docker.internal:host-gateway
    # ports:
    #   - 5173:5173
    volumes:
      - ./ui:/home/node/app
      - ./shared:/home/node/shared

  api:
    build:
      context: ./api
      target: development
    environment:
      ENV: local
      MICRONAUT_SERVER_CONTEXT_PATH: /api
      MICRONAUT_SERVER_PORT: 80
      VIRTUAL_HOST: localhost
      VIRTUAL_PROTO: http
      VIRTUAL_PATH: /api
    expose:
      - 80
    tty: true
    extra_hosts: # For Linux
      - host.docker.internal:host-gateway
    # ports:
    #   - 80:80
    #   - 8080:8080
    volumes:
      - ./api:/usr/local/api

  shared:
    image: node:20.19
    working_dir: /home/node/shared
    tty: true
    command: ./bin/docker-cmd
    extra_hosts: # For Linux
      - host.docker.internal:host-gateway
    volumes:
      - ./shared:/home/node/shared
      - ./api:/home/node/api

  smithy:
    image: gradle:8.4.0-jdk21
    working_dir: /usr/local/smithy
    tty: true
    command: ./bin/docker-cmd
    extra_hosts: # For Linux
      - host.docker.internal:host-gateway
    volumes:
      - ./smithy:/usr/local/smithy
      - ./shared:/usr/local/shared

  playwright:
    image: node:20.19
    environment:
      # BASE_URL: https://abc123xyz.cloudfront.net/api
      BASE_URL: 'http://api/api'
    user: node
    working_dir: /home/node/playwright
    tty: true
    command: "npm run test"
    extra_hosts: # For Linux
      - host.docker.internal:host-gateway
    volumes:
      - ./playwright:/home/node/playwright
      - ./shared:/home/node/shared

  docs:
    image: swaggerapi/swagger-ui:v5.22.0
    environment:
      SWAGGER_JSON: /home/swagger.json
    volumes:
      - ./smithy/build/smithyprojections/smithy/source/openapi/UserService.openapi.json:/home/swagger.json
    ports:
      - 8080:8080

  # Note: CDK invokes Docker for asset bundling,
  # so maybe this shouldn't live here
  # cdk:
  #   image: node:20.19
  #   user: node
  #   working_dir: /home/node/cdk
  #   tty: true
  #   command: "npm run deploy"
  #   extra_hosts: # For Linux
  #     - host.docker.internal:host-gateway
  #   volumes:
  #     - ./cdk:/home/node/cdk
  #     - ./api:/home/node/api
  #     - ./shared:/home/node/shared
